var searchIndex = JSON.parse('{\
"fpma":{"doc":"<code>fpma</code> ia a small library to parse and plot nhmmer.table …","t":[13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,12,12,12,11,11,11,11,11,11,11,11,0,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,0,12,11,12,5,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,7,11,11,12,11,11,11,12,5,5,5,12,12,12,11,11,11,7,3,3,7,7,11,11,11,11,12,12,12,12,5,5,11,11,5,11,11,5,11,11,12,5,12,12,11,11,11,11,11,11],"n":["Atp1","Atp4","Atp6","Atp8","Atp9","CcmB","CcmC","CcmFc","CcmFn","Cob","Cox1","Cox2","Cox3","MatR","MitoGene","MttB","Nad1","Nad2","Nad3","Nad4","Nad4L","Nad5","Nad6","Nad7","Nad9","Negative","Nhmmer","NhmmerRow","Positive","Rpl10","Rpl16","Rpl2","Rpl5","Rpl6","Rps1","Rps10","Rps11","Rps12","Rps13","Rps14","Rps19","Rps2","Rps3","Rps4","Rps7","Rps8","Sdh3","Sdh4","Strand","ali_from","ali_to","bias","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cli","clone","clone","clone_into","clone_into","cmp","e_value","env_from","env_to","eq","eq","filter_table_and_print","fmt","fmt","fmt","fmt","from","from","from","from","from_str","from_str","hash","hash","hmm_from","hmm_to","into","into","into","into","iterator","new","partial_cmp","plot","query_name","read_tables_and_parse","rows","run_hmmer","score","sq_len","strand","target_name","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","AppArgs","HELP","borrow","borrow_mut","e_value","fmt","from","into","mitochondrial_genome","parse_args","parse_f32","parse_path","path_to_hmms","path_to_nhmmer","plot","try_from","try_into","type_id","MARGIN","PlotData","PlotDataRow","SUBPLOT_HEIGHT","WIDTH","borrow","borrow","borrow_mut","borrow_mut","data","e_value","env_from","env_to","format_axis_label_len","format_bp_pretty","from","from","generate_plot_annotations","into","into","make_html","new","plot","query_name","scale_x","seq_len","strand","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["fpma","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fpma::cli","","","","","","","","","","","","","","","","","","fpma::plot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","An enumeration of all the genes checked for in this …","","","","","","","","","","","","Database representation of the tabular output of nhmmer.","A row representation of the tabular output of nhmmer using …","","","","","","Not yet recorded in angiosperms.","","","","","","","","","","","","Not yet recorded in angiosperms.","","","The strandedness of the HMM hit in the genome.","","","","","","","","","","","","A module to parse command line args","","","","","","","","","","","Returns a <code>PlotData</code> object to be plotted if specified.","","","","","","","","","Implementation of <code>FromStr</code> for MitoGene.","","","","","","","","","","Returns an iterator over the MitoGenes.","A new <code>Nhmmer</code> instance.","","A module to plot the output of nhmmer (HMMER3).","","In place mutation of <code>Nhmmer</code> where tables are read from the …","","Entry point for running hmmer.","","","","","","","","","","","","","","","","","","","A <code>pico-args</code> struct to parse the command line args.","","","","","","","","","Parse the command line arguments.","Parse <code>&amp;str</code> to <code>f32</code>.","Parse <code>OsStr</code> to <code>PathBuf</code>.","","","","","","","Size of the margins in the plot.","<code>PlotData</code> database. Composed of a <code>BTreeMap</code>, where the keys …","<code>PlotData</code> row entry.","The height of each subplot.","The width of the plot.","","","","","","","","","Add <code>bp</code> to the end of a string.","Pretty print <code>i32</code> numbers.","","","A function which returns the arrows representing genes …","","","Function to make the HTML string.","Create a new instance of <code>PlotData</code>.","Plot… work in progress.","","Scale an x value from the data scale to the visualisation …","","","","","","","",""],"i":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,2,0,0,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,3,3,3,1,2,3,4,1,2,3,4,0,1,2,1,2,1,3,3,3,1,2,4,1,2,3,4,1,2,3,4,1,2,1,2,3,3,1,2,3,4,1,4,1,0,3,4,4,0,3,3,3,3,1,2,1,2,3,4,1,2,3,4,1,2,3,4,0,0,5,5,5,5,5,5,5,0,0,0,5,5,5,5,5,5,0,0,0,0,0,6,7,6,7,7,6,6,6,0,0,6,7,0,6,7,0,7,7,6,0,6,6,6,7,6,7,6,7],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["mitogene",4]],[[],["strand",4]],[[]],[[]],[[["mitogene",4]],["ordering",4]],null,null,null,[[["mitogene",4]],["bool",15]],[[["strand",4]],["bool",15]],[[["f32",15]],["result",4,[["plotdata",3],["box",3,[["error",8]]]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["iter",3,[["mitogene",4]]]],[[]],[[["mitogene",4]],["option",4,[["ordering",4]]]],null,null,[[["tempdir",3]],["result",4,[["box",3,[["error",8]]]]]],null,[[["pathbuf",3],["pathbuf",3],["pathbuf",3],["tempdir",3]],["result",4,[["box",3,[["error",8]]]]]],null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],null,[[["formatter",3]],["result",6]],[[]],[[]],null,[[],["result",4,[["appargs",3],["error",4]]]],[[["str",15]],["result",4,[["f32",15],["str",15]]]],[[["osstr",3]],["result",4,[["pathbuf",3],["str",15]]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[]],[[]],null,null,null,null,[[["f32",15]],["string",3]],[[["i32",15]],["string",3]],[[]],[[]],[[["plotdata",3]],["string",3]],[[]],[[]],[[["string",3]],["string",3]],[[]],[[["str",15]],["result",4,[["box",3,[["error",8]]]]]],null,[[["f32",15],["f32",15],["f32",15],["f32",15],["f32",15]],["f32",15]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"MitoGene"],[4,"Strand"],[3,"NhmmerRow"],[3,"Nhmmer"],[3,"AppArgs"],[3,"PlotDataRow"],[3,"PlotData"]]},\
"pico_args":{"doc":"An ultra simple CLI arguments parser.","t":[13,3,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12],"n":["ArgumentParsingFailed","Arguments","Error","MissingArgument","MissingOption","NonUtf8Argument","OptionWithoutAValue","Utf8ArgumentParsingFailed","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","contains","finish","fmt","fmt","fmt","free_from_fn","free_from_os_str","free_from_str","from","from","from_env","from_vec","into","into","opt_free_from_fn","opt_free_from_os_str","opt_free_from_str","opt_value_from_fn","opt_value_from_os_str","opt_value_from_str","subcommand","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","value_from_fn","value_from_os_str","value_from_str","values_from_fn","values_from_os_str","values_from_str","0","0","cause","cause","value"],"q":["pico_args","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","pico_args::Error","","","",""],"d":["Failed to parse a raw free-standing argument.","An arguments parser.","A list of possible errors.","A missing free-standing argument.","A missing option.","Arguments must be a valid UTF-8 strings.","An option without a value.","Failed to parse a UTF-8 free-standing argument.","","","","","","","","","Checks that arguments contain a specified flag.","Returns a list of remaining arguments.","","","","Parses a free-standing argument using a specified function.","Parses a free-standing argument using a specified function.","Parses a free-standing argument using <code>FromStr</code> trait.","","","Creates a parser from <code>env::args_os</code>.","Creates a parser from a vector of arguments.","","","Parses an optional free-standing argument using a …","Parses a free-standing argument using a specified function.","Parses an optional free-standing argument using <code>FromStr</code> …","Parses an optional key-value pair using a specified …","Parses an optional key-value pair using a specified …","Parses an optional key-value pair using <code>FromStr</code> trait.","Parses the name of the subcommand, that is, the first …","","","","","","","","","","Parses a key-value pair using a specified function.","Parses a key-value pair using a specified function.","Parses a key-value pair using <code>FromStr</code> trait.","Parses multiple key-value pairs into the <code>Vec</code> using a …","Parses multiple key-value pairs into the <code>Vec</code> using a …","Parses multiple key-value pairs into the <code>Vec</code> using <code>FromStr</code> …","","","","",""],"i":[1,0,0,1,1,1,1,1,1,2,1,2,1,2,1,2,2,2,1,1,2,2,2,2,1,2,2,2,1,2,2,2,2,2,2,2,2,1,2,1,1,2,1,2,1,2,2,2,2,2,2,2,3,4,5,6,5],"f":[null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["error",4]],[[],["arguments",3]],[[]],[[]],[[["into",8,[["keys",3]]]],["bool",15]],[[],["vec",3,[["osstring",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[]],[[]],[[]],[[["vec",3,[["osstring",3]]]]],[[]],[[]],[[],["result",4,[["option",4],["error",4]]]],[[],["result",4,[["option",4],["error",4]]]],[[],["result",4,[["option",4],["error",4]]]],[[["into",8,[["keys",3]]]],["result",4,[["option",4],["error",4]]]],[[["into",8,[["keys",3]]]],["result",4,[["option",4],["error",4]]]],[[],["result",4,[["option",4],["error",4]]]],[[],["result",4,[["option",4,[["string",3]]],["error",4]]]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["into",8,[["keys",3]]]],["result",4,[["error",4]]]],[[["into",8,[["keys",3]]]],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[["into",8,[["keys",3]]]],["result",4,[["vec",3],["error",4]]]],[[["into",8,[["keys",3]]]],["result",4,[["vec",3],["error",4]]]],[[],["result",4,[["vec",3],["error",4]]]],null,null,null,null,null],"p":[[4,"Error"],[3,"Arguments"],[13,"MissingOption"],[13,"OptionWithoutAValue"],[13,"Utf8ArgumentParsingFailed"],[13,"ArgumentParsingFailed"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};