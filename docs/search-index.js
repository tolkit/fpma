var searchIndex = JSON.parse('{\
"fpma":{"doc":"<code>fpma</code> ia a small cli/library to parse and plot nhmmer.table …","t":[13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,3,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,11,11,11,11,11,11,11,11,0,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,12,12,11,11,11,11,11,11,11,11,0,12,11,12,5,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,7,11,11,12,11,11,12,11,12,5,5,5,12,12,12,11,11,11,11,3,3,7,11,12,11,11,11,11,12,11,11,12,11,11,11,12,12,12,12,12,12,11,11,11,11,12,11,11,11,11,5,7,3,3,7,7,11,11,11,11,11,12,12,12,12,5,5,11,11,5,11,11,5,11,11,12,5,12,12,11,11,11,11,11,11,11,11],"n":["Atp1","Atp4","Atp6","Atp8","Atp9","CcmB","CcmC","CcmFc","CcmFn","Cob","Cox1","Cox2","Cox3","MatR","MitoGene","MttB","Nad1","Nad2","Nad3","Nad4","Nad4L","Nad5","Nad6","Nad7","Nad9","Negative","Nhmmer","NhmmerRow","Positive","Rpl10","Rpl16","Rpl2","Rpl5","Rpl6","Rps1","Rps10","Rps11","Rps12","Rps13","Rps14","Rps19","Rps2","Rps3","Rps4","Rps7","Rps8","Sdh3","Sdh4","Strand","TrnA_UGC","TrnC_GCA","TrnD_GUC","TrnE_UUC","TrnF_GAA","TrnG_GCC","TrnG_UCC","TrnH_GUG","TrnI_CAU","TrnI_GAU","TrnK_UUU","TrnL_CAA","TrnL_GAG","TrnL_UAA","TrnL_UAG","TrnM_CAU","TrnN_GUU","TrnP_UGG","TrnQ_UUG","TrnR_ACG","TrnR_UCG","TrnR_UCU","TrnS_GCU","TrnS_GGA","TrnS_UGA","TrnT_UGU","TrnV_GAC","TrnV_UAC","TrnW_CCA","TrnY_GUA","TrnfM_CAU","ali_from","ali_to","bias","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cli","clone","clone","clone_into","clone_into","cmp","e_value","env_from","env_to","eq","eq","filter_table_and_print","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_str","from_str","gff","hash","hash","hmm_from","hmm_to","into","into","into","into","iterator","make_gff3","new","partial_cmp","plot","query_name","read_tables_and_parse","rows","run_hmmer","score","sq_len","strand","target_name","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AppArgs","HELP","borrow","borrow_mut","e_value","fmt","from","gff","into","mitochondrial_genome","parse_args","parse_f32","parse_path","path_to_hmms","path_to_nhmmer","plot","try_from","try_into","type_id","vzip","GFF3","GFF3Field","HEADER","add_record","attributes","borrow","borrow","borrow_mut","borrow_mut","end","from","from","inner","into","into","new","phase","score","seqid","source","start","strand","try_from","try_from","try_into","try_into","type","type_id","type_id","vzip","vzip","write_gff3","MARGIN","PlotData","PlotDataRow","SUBPLOT_HEIGHT","WIDTH","borrow","borrow","borrow_mut","borrow_mut","completeness_angiosperms","data","e_value","env_from","env_to","format_axis_label_len","format_bp_pretty","from","from","generate_plot_annotations","into","into","make_html","new","plot","query_name","scale_x","seq_len","strand","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["fpma","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fpma::cli","","","","","","","","","","","","","","","","","","","","fpma::gff","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fpma::plot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","Lost in hornwort, lycopytes","Lost in hornwort, lycopytes","Lost in hornwort, lycopytes","Lost in hornwort, lycopytes","","","","","","An enumeration of all the genes checked for in this …","","","","","","","","","","","","Database representation of the tabular output of nhmmer.","A row representation of the tabular output of nhmmer using …","","","","","","Not yet recorded in angiosperms.","","","","","","","","","","","","Not yet recorded in angiosperms.","","","The strandedness of the HMM hit in the genome.","Potentially absent from Seed plants","","","","","","Potentially absent from Seed plants","Potentially absent from Seed plants","","Potentially absent from Seed plants","","Potentially absent from Seed plants","Potentially absent from Seed plants","Potentially absent from Seed plants","Potentially absent from Seed plants","Potentially absent from Seed plants","Potentially absent from Seed plants","","","Potentially absent from Seed plants","Potentially absent from Seed plants","Potentially absent from Seed plants","","Potentially absent from Seed plants","","Potentially absent from Seed plants","Potentially absent from Seed plants","","","","","","","","","","","","","","","","A module to parse command line args.","","","","","","","","","","","Returns a <code>PlotData</code> object to be plotted if specified.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Implementation of <code>FromStr</code> for MitoGene.","","A lightweight GFF3 writer.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns an iterator over the MitoGenes.","Produce a GFF from the NHMMER tables.","A new <code>Nhmmer</code> instance.","","A module to plot the output of nhmmer (HMMER3).","","In place mutation of <code>Nhmmer</code> where tables are read from a …","","Entry point for running hmmer.","","","","","","","","","","","","","","","","","","","","","","","","","A <code>pico-args</code> struct to parse the command line args.","The command line help string.","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Parse the command line arguments.","Parse <code>&amp;str</code> to <code>f32</code>.","Parse <code>OsStr</code> to <code>PathBuf</code>.","","","","","","","","Vector representation of a GFF3.","Fields of the GFF3.","GFF3 File Format header.","Add a record to a GFF3 file.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","New instance of a GFF3.","","","The sequence ID","The source (here fpma)","","","","","","","","","","","","Write a GFF3 to file.","Size of the margins in the plot.","<code>PlotData</code> database. Composed of a <code>BTreeMap</code>, where the keys …","<code>PlotData</code> row entry.","The height of each subplot.","The width of the plot.","","","","","Statistics on the plot data. Understand quickly the …","","","","","Add <code>bp</code> to the end of a string.","Pretty print <code>i32</code> numbers.","Returns the argument unchanged.","Returns the argument unchanged.","A function which returns the arrows representing genes …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Function to make the HTML string.","Create a new instance of <code>PlotData</code>.","Takes an output string for the file name, and creates an …","","Scale an x value from the data scale to the visualisation …","","","","","","","","","",""],"i":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,2,0,0,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,3,3,3,1,2,3,4,1,2,3,4,0,1,2,1,2,1,3,3,3,1,2,4,1,1,2,2,3,4,1,2,3,4,1,2,0,1,2,3,3,1,2,3,4,1,4,4,1,0,3,4,4,0,3,3,3,3,1,2,1,2,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,0,0,5,5,5,5,5,5,5,5,0,0,0,5,5,5,5,5,5,5,0,0,0,6,7,7,6,7,6,7,7,6,6,7,6,6,7,7,7,7,7,7,7,6,7,6,7,7,6,7,6,0,0,0,0,0,0,8,9,8,9,9,9,8,8,8,0,0,8,9,0,8,9,0,9,9,8,0,8,8,8,9,8,9,8,9,8,9],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0]],["mitogene",4]],[[["",0]],["strand",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[["",0],["mitogene",4]],["ordering",4]],null,null,null,[[["",0],["mitogene",4]],["bool",0]],[[["",0],["strand",4]],["bool",0]],[[["",0],["f32",0]],["result",4,[["plotdata",3],["box",3,[["error",8]]]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",4,[["error",3]]]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[["",0],["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["str",0]],["result",4]],[[["str",0]],["result",4]],null,[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[]],[[]],[[]],[[]],[[],["iter",3,[["mitogene",4]]]],[[["",0],["pathbuf",3],["f32",0]],["result",4,[["box",3,[["error",8]]]]]],[[]],[[["",0],["mitogene",4]],["option",4,[["ordering",4]]]],null,null,[[["",0],["tempdir",3]],["result",4,[["box",3,[["error",8]]]]]],null,[[["pathbuf",3],["pathbuf",3],["pathbuf",3],["tempdir",3]],["result",4,[["box",3,[["error",8]]]]]],null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]],["string",3]],[[["",0]],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[]],[[]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],null,[[["",0],["formatter",3]],["result",6]],[[]],null,[[]],null,[[],["result",4,[["appargs",3,[["pathbuf",3]]],["error",4]]]],[[["str",0]],["result",4,[["f32",0],["str",0]]]],[[["osstr",3]],["result",4,[["pathbuf",3],["str",0]]]],null,null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,[[["",0],["gff3field",3]]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[]],[[]],null,[[]],[[]],[[]],null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],[[["gff3",3],["file",3]],["result",4,[["error",3]]]],null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]]],null,null,null,null,[[["f32",0]],["string",3]],[[["i32",0]],["string",3]],[[]],[[]],[[["plotdata",3]],["string",3]],[[]],[[]],[[["string",3]],["string",3]],[[]],[[["",0],["pathbuf",3]],["result",4,[["box",3,[["error",8]]]]]],null,[[["f32",0],["f32",0],["f32",0],["f32",0],["f32",0]],["f32",0]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]]],"p":[[4,"MitoGene"],[4,"Strand"],[3,"NhmmerRow"],[3,"Nhmmer"],[3,"AppArgs"],[3,"GFF3"],[3,"GFF3Field"],[3,"PlotDataRow"],[3,"PlotData"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};